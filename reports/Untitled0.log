Traceback (most recent call last):
  File "/usr/local/lib/python3.7/dist-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.7/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.7/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
clf = RandomForestClassifier(n_estimators=50)
clf.fit(X_train, y_train)

cm = confusion_matrix(y_test, Y_pred)
accuracy = accuracy_score(y_test,Y_pred)
precision =precision_score(y_test, Y_pred,average='micro')
recall =  recall_score(y_test, Y_pred,average='micro')
f1 = f1_score(y_test,Y_pred,average='micro')
print('Confusion matrix for randomForest\n',cm)
print('accuracy_randomForest: %.3f' %accuracy)
print('precision_randomForest: %.3f' %precision)
print('recall_randomForest: %.3f' %recall)
print('f1-score_randomForest : %.3f' %f1)
------------------

[0;31m[0m
[0;31mValueError[0mTraceback (most recent call last)
[0;32m<ipython-input-6-caa9837481af>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0mclf[0m [0;34m=[0m [0mRandomForestClassifier[0m[0;34m([0m[0mn_estimators[0m[0;34m=[0m[0;36m50[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 2[0;31m [0mclf[0m[0;34m.[0m[0mfit[0m[0;34m([0m[0mX_train[0m[0;34m,[0m [0my_train[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m [0;34m[0m[0m
[1;32m      4[0m [0mcm[0m [0;34m=[0m [0mconfusion_matrix[0m[0;34m([0m[0my_test[0m[0;34m,[0m [0mY_pred[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0maccuracy[0m [0;34m=[0m [0maccuracy_score[0m[0;34m([0m[0my_test[0m[0;34m,[0m[0mY_pred[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/ensemble/_forest.py[0m in [0;36mfit[0;34m(self, X, y, sample_weight)[0m
[1;32m    326[0m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"sparse multilabel-indicator for y is not supported."[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    327[0m         X, y = self._validate_data(
[0;32m--> 328[0;31m             [0mX[0m[0;34m,[0m [0my[0m[0;34m,[0m [0mmulti_output[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0maccept_sparse[0m[0;34m=[0m[0;34m"csc"[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mDTYPE[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    329[0m         )
[1;32m    330[0m         [0;32mif[0m [0msample_weight[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/base.py[0m in [0;36m_validate_data[0;34m(self, X, y, reset, validate_separately, **check_params)[0m
[1;32m    579[0m                 [0my[0m [0;34m=[0m [0mcheck_array[0m[0;34m([0m[0my[0m[0;34m,[0m [0;34m**[0m[0mcheck_y_params[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    580[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 581[0;31m                 [0mX[0m[0;34m,[0m [0my[0m [0;34m=[0m [0mcheck_X_y[0m[0;34m([0m[0mX[0m[0;34m,[0m [0my[0m[0;34m,[0m [0;34m**[0m[0mcheck_params[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    582[0m             [0mout[0m [0;34m=[0m [0mX[0m[0;34m,[0m [0my[0m[0;34m[0m[0;34m[0m[0m
[1;32m    583[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36mcheck_X_y[0;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)[0m
[1;32m    974[0m         [0mensure_min_samples[0m[0;34m=[0m[0mensure_min_samples[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    975[0m         [0mensure_min_features[0m[0;34m=[0m[0mensure_min_features[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 976[0;31m         [0mestimator[0m[0;34m=[0m[0mestimator[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    977[0m     )
[1;32m    978[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py[0m in [0;36mcheck_array[0;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator)[0m
[1;32m    744[0m                     [0marray[0m [0;34m=[0m [0marray[0m[0;34m.[0m[0mastype[0m[0;34m([0m[0mdtype[0m[0;34m,[0m [0mcasting[0m[0;34m=[0m[0;34m"unsafe"[0m[0;34m,[0m [0mcopy[0m[0;34m=[0m[0;32mFalse[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    745[0m                 [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 746[0;31m                     [0marray[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0masarray[0m[0;34m([0m[0marray[0m[0;34m,[0m [0morder[0m[0;34m=[0m[0morder[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mdtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    747[0m             [0;32mexcept[0m [0mComplexWarning[0m [0;32mas[0m [0mcomplex_warning[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    748[0m                 raise ValueError(

[0;31mValueError[0m: could not convert string to float: 'TIDAK'
ValueError: could not convert string to float: 'TIDAK'

